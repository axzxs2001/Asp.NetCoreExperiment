//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//
//     对此文件的更改可能导致不正确的行为，并在以下条件下丢失:
//     代码重新生成。
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToDoServiceReference
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Item", Namespace="http://schemas.datacontract.org/2004/07/")]
    public partial record Item : object
    {
        
        private System.DateTime CreateOnField;
        
        private string DescriptionField;
        
        private bool IsCompleteField;
        
        private string TitleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreateOn
        {
            get
            {
                return this.CreateOnField;
            }
            set
            {
                this.CreateOnField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsComplete
        {
            get
            {
                return this.IsCompleteField;
            }
            set
            {
                this.IsCompleteField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title
        {
            get
            {
                return this.TitleField;
            }
            set
            {
                this.TitleField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ToDoServiceReference.IToDoService")]
    public interface IToDoService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/Add", ReplyAction="http://tempuri.org/IToDoService/AddResponse")]
        System.Threading.Tasks.Task<ToDoServiceReference.AddResponse> AddAsync(ToDoServiceReference.AddRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/GetList", ReplyAction="http://tempuri.org/IToDoService/GetListResponse")]
        System.Threading.Tasks.Task<ToDoServiceReference.GetListResponse> GetListAsync(ToDoServiceReference.GetListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IToDoService/Remove", ReplyAction="http://tempuri.org/IToDoService/RemoveResponse")]
        System.Threading.Tasks.Task<ToDoServiceReference.RemoveResponse> RemoveAsync(ToDoServiceReference.RemoveRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Add", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ToDoServiceReference.Item item;
        
        public AddRequest()
        {
        }
        
        public AddRequest(ToDoServiceReference.Item item)
        {
            this.item = item;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AddResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class AddResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool AddResult;
        
        public AddResponse()
        {
        }
        
        public AddResponse(bool AddResult)
        {
            this.AddResult = AddResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetListRequest
    {
        
        public GetListRequest()
        {
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetListResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public ToDoServiceReference.Item[] GetListResult;
        
        public GetListResponse()
        {
        }
        
        public GetListResponse(ToDoServiceReference.Item[] GetListResult)
        {
            this.GetListResult = GetListResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Remove", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoveRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string title;
        
        public RemoveRequest()
        {
        }
        
        public RemoveRequest(string title)
        {
            this.title = title;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoveResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoveResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool RemoveResult;
        
        public RemoveResponse()
        {
        }
        
        public RemoveResponse(bool RemoveResult)
        {
            this.RemoveResult = RemoveResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IToDoServiceChannel : ToDoServiceReference.IToDoService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ToDoServiceClient : System.ServiceModel.ClientBase<ToDoServiceReference.IToDoService>, ToDoServiceReference.IToDoService
    {
        
        /// <summary>
        /// 实现此分部方法，配置服务终结点。
        /// </summary>
        /// <param name="serviceEndpoint">要配置的终结点</param>
        /// <param name="clientCredentials">客户端凭据</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ToDoServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(ToDoServiceClient.GetBindingForEndpoint(endpointConfiguration), ToDoServiceClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ToDoServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ToDoServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ToDoServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ToDoServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ToDoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<ToDoServiceReference.AddResponse> AddAsync(ToDoServiceReference.AddRequest request)
        {
            return base.Channel.AddAsync(request);
        }
        
        public System.Threading.Tasks.Task<ToDoServiceReference.GetListResponse> GetListAsync(ToDoServiceReference.GetListRequest request)
        {
            return base.Channel.GetListAsync(request);
        }
        
        public System.Threading.Tasks.Task<ToDoServiceReference.RemoveResponse> RemoveAsync(ToDoServiceReference.RemoveRequest request)
        {
            return base.Channel.RemoveAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IToDoService))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IToDoService))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                httpsBindingElement.AuthenticationScheme = System.Net.AuthenticationSchemes.Negotiate;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IToDoService))
            {
                return new System.ServiceModel.EndpointAddress("http://localhost:5000/ToDoService/basichttp");
            }
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IToDoService))
            {
                return new System.ServiceModel.EndpointAddress("https://localhost:5001/ToDoService/WSHttps");
            }
            throw new System.InvalidOperationException(string.Format("找不到名称为“{0}”的终结点。", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            BasicHttpBinding_IToDoService,
            
            WSHttpBinding_IToDoService,
        }
    }
}
